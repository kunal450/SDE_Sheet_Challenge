class Solution {
public:
    double myPow(double x, int n) {
      bool flag=false;
        long long range=n;
        if(range==0) return 1;
        if(range<0){
            flag=true;
            range*=-1;
        }
        double res=1;
        while(range>1){
            if(range%2==0){
                x=pow(x,2);
                range=range/2;
            }
            else{
                res*=x;
                range--;
            }
        }
        res=res*x;
        if(flag==true) return (double)1/res ;
        else return res;       
    }
};

here we have 4 edge cases 
1. when n<0
2.when n==0;
3. when n>0;
4. As it is given n is na integer so its range is -2147483648 to 2147483647, Here we can see that negative value is 1 more so if we make it positive for our question
We get an error So for that we will make a long variable which store the value of n int ;
